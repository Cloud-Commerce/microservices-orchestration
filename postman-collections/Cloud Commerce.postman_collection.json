{
	"info": {
		"_postman_id": "419b6196-4a86-eae5-1082-b3863ebfb111",
		"name": "Cloud Commerce",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6963824"
	},
	"item": [
		{
			"name": "Signup",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{oldPassword}}\"\n}"
				},
				"url": {
					"raw": "{{gateway-url}}/auth/signup",
					"host": [
						"{{gateway-url}}"
					],
					"path": [
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Parse the JSON response\r",
							"const response = pm.response.json();\r",
							"\r",
							"// 2. Extract token (assuming response has { \"token\": \"xyz\" } structure)\r",
							"const token = response.token;\r",
							"\r",
							"// 3. Validate token exists\r",
							"if (token) {\r",
							"    // 4. Set as environment variable\r",
							"    pm.environment.set(\"token\", token);\r",
							"    console.log(\"Token saved:\", token);\r",
							"} else {\r",
							"    console.error(\"No token found in response\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{oldPassword}}\"\n}\n"
				},
				"url": {
					"raw": "http://localhost:8501/api/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8501",
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"ecom_pass\"\n}"
				},
				"url": {
					"raw": "{{gateway-url}}/auth/logout",
					"host": [
						"{{gateway-url}}"
					],
					"path": [
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"oldPassword\": \"{{oldPassword}}\",\n    \"newPassword\": \"ecom_pass1\"\n}"
				},
				"url": {
					"raw": "{{gateway-url}}/auth/change-password",
					"host": [
						"{{gateway-url}}"
					],
					"path": [
						"auth",
						"change-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "ReLogin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Parse the JSON response\r",
							"const response = pm.response.json();\r",
							"\r",
							"// 2. Extract token (assuming response has { \"token\": \"xyz\" } structure)\r",
							"const token = response.token;\r",
							"\r",
							"// 3. Validate token exists\r",
							"if (token) {\r",
							"    // 4. Set as environment variable\r",
							"    pm.environment.set(\"token\", token);\r",
							"    console.log(\"Token saved:\", token);\r",
							"} else {\r",
							"    console.error(\"No token found in response\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{gateway-url}}/auth/relogin",
					"host": [
						"{{gateway-url}}"
					],
					"path": [
						"auth",
						"relogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{gateway-url}}/users",
					"host": [
						"{{gateway-url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}